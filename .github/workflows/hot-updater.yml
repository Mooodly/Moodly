name: Moodly HotUpdater CI/CD

on:
  push:
    branches: [main,hotfix]

permissions:
  contents: write
  
jobs:
  deploy-ota:
    if: contains(github.event.head_commit.message, '[hot-update]') || github.ref == 'refs/heads/hotfix'
    runs-on: ubuntu-latest
    env:
      HOT_UPDATER_SUPABASE_URL: ${{ secrets.HOT_UPDATER_SUPABASE_URL }}
      HOT_UPDATER_SUPABASE_ANON_KEY: ${{ secrets.HOT_UPDATER_SUPABASE_ANON_KEY }}
      HOT_UPDATER_SUPABASE_BUCKET_NAME: ${{ secrets.HOT_UPDATER_SUPABASE_BUCKET_NAME }}

    steps:
      # 1) 원격 레포지토리 데이터 내려받기
      - uses: actions/checkout@v4

      # 2) 커밋 메세지 가져오기
      - name: 최신 커밋 메시지 가져오기
        id: get_msg
        run: |
          echo "msg=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

      # 4) Node.js 환경 설정 + yarn 캐시
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      # 5) Yarn 의존성 설치
      - run: yarn install --frozen-lockfile

      # 6) fingerprint 비교
      - name: Check fingerprint
        id: fp
        run: |
          set +e
          yarn hot-updater fingerprint > fp.log
          echo "EXIT=$?" >> $GITHUB_OUTPUT
          exit 0

      # 7) fingerprint가 다를 경우, 신규 fingerprint 업로드
      - name: Create new fingerprint
        if: ${{ steps.fp.outputs.EXIT != '0' }}

        run: |
          yarn hot-updater fingerprint create

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "feat. fingerprint 프로젝트 동기화"
            git push
          else
            echo "변경 사항 없음 — 커밋 생략"
          fi

      # 8) [hot-update], [force] 명령어 설정
      - name: Deploy bundles
        run: |
          FLAG=""
          if [[ "${{ github.ref }}" == "refs/heads/hotfix" ]]; then
            echo "Hotfix 브랜치입니다. 강제 업데이트를 실행합니다."
            FLAG="-f"
          else
            COMMIT_MSG="${{ steps.get_msg.outputs.msg }}"
            echo "커밋 메시지: $COMMIT_MSG"

            if [[ "$COMMIT_MSG" == *"[force]"* ]]; then
              echo "강제 업데이트(-f) 모드"
              FLAG="-f"
            else
              echo "일반 업데이트 모드"
            fi
          fi

          # 실제 배포
          echo "배포를 시작합니다. FLAG: $FLAG"
          yarn hot-updater deploy -p android $FLAG
          yarn hot-updater deploy -p ios -t '1.0.x' $FLAG
      # 9 TRIGGER ON
