name: Moodly HotUpdater CI/CD

on:
  push:
    branches: [main]

jobs:
  deploy-ota:
    runs-on: ubuntu-latest

    env:
      HOT_UPDATER_SUPABASE_URL: ${{ secrets.HOT_UPDATER_SUPABASE_URL }}
      HOT_UPDATER_SUPABASE_ANON_KEY: ${{ secrets.HOT_UPDATER_SUPABASE_ANON_KEY }}
      HOT_UPDATER_SUPABASE_BUCKET_NAME: ${{ secrets.HOT_UPDATER_SUPABASE_BUCKET_NAME }}

    permissions:
      contents: write # fingerprint.json 자동 커밋용

    steps:
      # 1) 체크아웃
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      # 2) Node + Yarn
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      # 3) 의존성 설치
      - run: yarn install --frozen-lockfile

      # 4) 현재 fingerprint 검증
      - name: Check fingerprint
        id: fp
        run: |
          yarn hot-updater fingerprint                     # exit code: 0 = OK, 1 = mismatch
          echo "status=$?" >> $GITHUB_OUTPUT

      # 5) fingerprint 불일치면 새로 생성 → 파일 커밋 & 푸시
      - name: Create & commit new fingerprint
        if: steps.fp.outputs.status == '1'
        run: |
          echo "⚠️  Fingerprint mismatch --> 재생성"
          yarn hot-updater fingerprint create --write-to-file
          git config user.name  "github-actions"
          git config user.email "actions@github.com"
          git add fingerprint.json
          git commit -m "chore: update fingerprint [ci skip]"
          git push

      # 6) 최신 커밋 메시지 읽기
      - id: msg
        run: echo "MSG=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

      # 7) [hot-update] 태그 없으면 종료
      - name: Hot-update 태그 체크
        if: ${{ !contains(steps.msg.outputs.MSG, '[hot-update]') }}
        run: echo "Hot-update 태그 없음 → 작업 종료." && exit 0

      # 8) [force] 태그 확인
      - id: flag
        run: |
          [[ "${{ steps.msg.outputs.MSG }}" == *"[force]"* ]] && echo "FLAG=-f" >> $GITHUB_OUTPUT

      # 9) Android OTA 배포
      - run: yarn hot-updater deploy -p android ${{ steps.flag.outputs.FLAG }}

      # 10) iOS OTA 배포 (Fingerprint 전략이면 -t 불필요)
      - run: yarn hot-updater deploy -p ios -c production ${{ steps.flag.outputs.FLAG }}
